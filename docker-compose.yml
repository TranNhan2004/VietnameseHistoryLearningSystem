services:
  webapi:
    build:
      context: ./Backend/WebAPI
      dockerfile: Dockerfile
    env_file:
      - ./Backend/WebAPI/src/main/resources/.env
    depends_on:
      - mysql
      - redis
    ports:
      - "9000:9000"
    networks:
      - app-network

  chatbotapi:
    build:
      context: ./Backend/ChatBotAPI
      dockerfile: Dockerfile
    env_file:
      - ./Backend/ChatBotAPI/.env
    depends_on:
      - mysql
      - redis
    ports:
      - "8000:8000"
    networks:
      - app-network

  mysql:
    image: mysql:9.3.0
    env_file:
      - ./Backend/WebAPI/src/main/resources/db/mysql/.env
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3312:3306"
    networks:
      - app-network

  redis:
    image: redis:7.4.3-alpine
    volumes:
      - ./Backend/WebAPI/src/main/resources/db/redis/redis.conf:/etc/redis/redis.conf
      - redis-data:/data
    command: [ "redis-server", "/etc/redis/redis.conf" ]
    ports:
      - "6379:6379"
    networks:
      - app-network


  nginx:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - webapi
    networks:
      - app-network

  tunnel:
    build:
      context: ./Tunnel
      dockerfile: Dockerfile
    env_file:
      - ./Tunnel/.env
    restart: unless-stopped
    #    depends_on:
    #      - nginx
    networks:
      - app-network

volumes:
  mysql-data:
  redis-data:

networks:
  app-network:
    driver: bridge